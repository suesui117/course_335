Topics:

1. chapter 1 (preliminary math stuff, preliminary c++ stuff)
2. Chapter 2 (complexity theory)
3. Makefiles and g++
4. Chapter 3 (iterators, standard template library(array, vector , list and
              unordered_maps), smart pointers), review code covered for these topics


Expect true/false, short answers, multiple choice(maybe), 
1 coding question- give a problem and you must code up the solution,
1 question will have you analyze the compliexity of some code.

Proofs: identity a proof, and be familiar with the concept, no explicit Proofs

Skiped from chapter 1: Greatest common divisor algorithm 

How the g++ compiler works and its architecture(preprocessor, compiler, linker),
and how to use make. In terms of questions I will only ask about things seen in
the Makefile for assignment 1. 

Understanding mod notation, for example: is this true 9 = 7 mod 3 ? (false)

what is a template, how does it compile , explain why .h and .cpp is weird. 

n + nlogn + 7= O(nlogn)

know important runtimes like selection sort = O(n^2)

make sure to know l and r values, references, pointers, big 5 constuctors

How to use arithmetic series, be able to explain what the other series are. 

These are some examples but not all!